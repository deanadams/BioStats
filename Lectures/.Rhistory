y<-c(6,7,4,5,9,3,2,5)
y1<-c(-5,0,5,2,-2,3,-3,1)
N<-length(y)
x<-rep(1,N)
x1<-cbind(x,c(1,2,3,4,5,6,7,8))
N<-length(y)
coef(lm(y~x))
coef(lm(y~x1))
x1
coef(lm(y~x1-1))
resid(lm(y~x1))
sum(resid(lm(y~x1))^2)
library(knitr)
library(RRPP)
library(geomorph)
library(MASS)
library(geiger)
library(phytools)
knitr::opts_chunk$set(echo = TRUE)
# Read data from Smith and Collyer 2008
snake<-read.csv("lectureData/11.model.selection/Lab-11-snake.csv",header=T)
site<-as.factor(snake[,1]);region<-as.factor(snake[,2]);sex<-as.factor(snake[,3])
svl<-snake[,4]; hs<-snake[,5] # hs= head size, calculated as centroid size from lm
Y<-as.matrix(snake[,-(1:5)])
Full<-lm(Y~svl + sex*region, model=T,x=T)
Red1<-lm(Y~svl+region, model=T,x=T)
Red2<-lm(Y~svl, model=T,x=T)
Red3<-lm(Y~region, model=T,x=T)
anova(Full)
anova(lm(Y~svl * sex*region, model=T,x=T))
summary(manova(lm(Y~svl * sex*region, model=T,x=T)))
anova(Full, Red1)
anova(Red2,Red1)
log(.5)
maic<-function(x,...){ # each x is a model
y<-resid(x)
E<-t(y)%*%y
d<-det(E)
if(length(E)>1) n<-nrow(y) else n<-length(y)
if(length(E)>1) p<-ncol(y) else p<-1
k<-x$rank # same as df in "AIC" except "AIC" adds one for variance
lh<-n*(log(d/n^p)+p)
LLik<- (-2*((-.5*n*(log(d/n^p)+p))-(0.5*(n*log(2*pi)))))
pen<-2*(p*k+0.5*p*(p+1))
m<-LLik+pen
maic<-c(k,m)
}
maic.Full<-maic(Full)
maic.Red1<-maic(Red1)
maic.Red2<-maic(Red2)
maic.Red3<-maic(Red3)
res <- rbind(maic.Full, maic.Red1, maic.Red2,maic.Red3)
res
colnames(res)
colnames.res <- c('Model','df','AIC')
res
dim(res)
colnames.res <- c('df','AIC')
res
colnames(res) <- c('df','AIC')
res
res <- cbind(res,res[,2]-min(res[,2]))
res
colnames(res) <- c('df','AIC','dAIC')
res
AIC(hs.svl.by.reg, hs.svl.reg)
library(RRPP)
library(geomorph)
library(MASS)
library(geiger)
library(phytools)
snake<-read.csv("lectureData/11.model.comparison/Lab-11-snake.csv",header=T)
site<-as.factor(snake[,1]);region<-as.factor(snake[,2]);sex<-as.factor(snake[,3])
svl<-snake[,4]; hs<-snake[,5] # hs= head size, calculated as centroid size from lm
Y<-as.matrix(snake[,-(1:5)])
hs.svl.by.reg<-lm(hs~svl*region, model=T,x=T)
hs.svl.reg<-lm(hs~svl + region, model=T,x=T)
AIC(hs.svl.by.reg, hs.svl.reg)
c1<-exp(-.5*0)
c2<-exp(-.5*(AIC(hs.svl.by.reg)-AIC(hs.svl.reg)))
w1<-c1/(c1+c2)  #AIC weights
w2<-c2/(c1+c2)
beta1<-w1*(hs.svl.reg$coef)
beta2<-w2*(hs.svl.by.reg$coef)
beta.avg<-c((beta1[1]+beta2[1]),(beta1[2]+beta2[2]),(beta1[3]+beta2[3]),
(beta1[4]+beta2[4]),beta2[5],beta2[6])
beta.avg #model averaged coefficients
w1
w2
Terms<-terms(formula(hs.svl.by.reg))  #set up X matrix
X<-model.matrix(Terms)
resid<-hs-X%*%beta.avg
E<-t(resid)%*%resid  #Note: univariate, so this IS the det(E)
n<-nrow(resid); p<-1  #NOTE: p<-ncol(resid) for multivariate
k<-hs.svl.by.reg$rank # same as df in "AIC" except "AIC" adds one for variance
LLik<- (-2*((-.5*n*(log(E/n^p)+p))-(0.5*(n*log(2*pi)))))
pen<-2*(p*k+0.5*p*(p+1))
AIC.mdl.avg<-LLik+pen
AIC(hs.svl.by.reg)
AIC(hs.svl.reg)
AIC.mdl.avg
anova(hs.svl.by.reg)
anova(hs.svl.reg,hs.svl.by.reg)
x<-seq(1:10)
y<-c(2,2,3,4,4,7,7,7,8,8)
plot(x,y)
anova(lm(y~x))
iter=1000
rep<-lapply(1:iter, function(j) sample(seq(1:10),5))
diff<-lapply(1:iter, function(j) setdiff(seq(1:10),rep[[j]]))
#full model
model.x<- lapply(1:iter, function(j) lm(y[rep[[j]]]~x[rep[[j]]]))
resid.y<-lapply(1:iter, function(j)  resid(model.x[[j]],newdata=data.frame(c(x[diff[[j]]]))))
ss.x<-unlist(lapply(1:iter, function(j) crossprod(resid.y[[j]])))
#reduced model
model.1<- lapply(1:iter, function(j) lm(y[rep[[j]]]~1))
resid.1<-lapply(1:iter, function(j)  resid(model.1[[j]],newdata=data.frame(c(x[diff[[j]]]))))
ss.1<-unlist(lapply(1:iter, function(j) crossprod(resid.1[[j]])))
c(mean(ss.1),var(ss.1))
c(mean(ss.x),var(ss.x))
anova(hs.svl,hs.svl.reg)
library(geomorph)
?procD.pgls
data(plethspecies)
Y.gpa<-gpagen(plethspecies$land)    #GPA-alignment
gdf <- geomorph.data.frame(Y.gpa, phy = plethspecies$phy)
pleth.pgls <- procD.pgls(coords ~ Csize, phy = phy, data = gdf, iter = 999)
gdf2 <- geomorph.data.frame(shape = two.d.array(Y.gpa$coords, size = Y.gpa$Csize, phy = plethspecies$phy ))
gdf2 <- geomorph.data.frame(shape = two.d.array(Y.gpa$coords), size = Y.gpa$Csize, phy = plethspecies$phy )
pleth.pgls2 <- procD.pgls(shape ~ size, phy = phy, data = gdf2, iter = 999)
pleth.pgls$pgls.fitted
pleth.pgls2$pgls.fitted
pleth.pgls2$LM$gls.fitted
gp <- factor(1,1,1,1,2,2,2,2,2)
gp <- factor(c(1,1,1,1,2,2,2,2,2))
gp
gp <- factor(c(1,1,1,1,2,2,2,2,2)); names(gp) <- plethspecies$phy$tip.label
pleth.pgls <- procD.pgls(coords ~ Csize, phy = phy, data = gdf, gp = gp, iter = 999)
pleth.pgls <- procD.pgls(coords ~ Csize*gp, phy = phy, data = gdf, iter = 999)
gp <- factor(c(1,1,1,1,2,2,2,2,2)); names(gp) <- plethspecies$phy$tip.label
gdf <- geomorph.data.frame(Y.gpa, phy = plethspecies$phy, gp = gp)
gdf$gp
pleth.pgls <- procD.pgls(coords ~ Csize*gp, phy = phy, data = gdf, iter = 999)
anova(procD.pgls(coords ~ Csize*gp, SS.type = "I", phy = phy, data = gdf, iter = 999)
)
anova(procD.pgls(coords ~ Csize*gp, SS.type = "III", phy = phy, data = gdf, iter = 999))
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/Lectures")
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/Lectures")
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/Lectures")
library(knitr)
library(RRPP)
library(geomorph)
library(RRPP)
library(scatterplot3d)
knitr::opts_chunk$set(echo = TRUE)
bumpus<-read.csv("lectureData/02.Resampling/bumpus.csv",header=T)
as.numeric(as.factor(bumpus$sex))
plot(as.numeric(as.factor(bumpus$sex)),bumpus$AE, pch=21, bg="red", xlab = "Sex", ylab="Alar Extent")
geomorph:::compare.CR()
geomorph:::compare.CR
geomorph:::modularity.test
geomorph:::effect.size
y <- c(120,107,110,116, 114, 111, 113, 117, 114, 112,110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
sex <- as.factor(c(rep("M",10),rep("F",10)))
sex
sexdata<-split(y,sex)
hist(sexdata$M,col="blue",freq=TRUE)
hist(sexdata$F,col="red",freq=TRUE,add=TRUE)
sexdata
hist(sexdata$M,col="blue",freq=TRUE)
hist(sexdata$F,col="red",freq=TRUE)
hist(sexdata$M,col="blue",freq=TRUE,xlim = range(y))
hist(sexdata$M,col="blue",freq=TRUE,xlim = range(y))
hist(sexdata$F,col="red",freq=TRUE,add=TRUE)
hist(sexdata$M,col="blue",freq=TRUE,xlim = range(y))
hist(sexdata$F,col="red",freq=TRUE,add=TRUE)
hist(sexdata$M,col=rgb(0,0,0,1),freq=TRUE,xlim = range(y))
hist(sexdata$F,col=rgb(0.8,0.8,0.8,0.5),freq=TRUE,add=TRUE)
apply(y,sex,mean)
tapply(y,sex,mean)
y <- c(rnorm(50,mean = 115),rnorm(50,mean=110))
sex <- as.factor(c(rep("M",50),rep("F",50)))
sexdata<-split(y,sex)
hist(sexdata$M,col=rgb(0,0,0,1),freq=TRUE,xlim = range(y))
hist(sexdata$F,col=rgb(0.8,0.8,0.8,0.5),freq=TRUE,add=TRUE)
y <- c(rnorm(50,mean = 115,sd = 3),rnorm(50,mean=110,sd=3))
sexdata<-split(y,sex)
hist(sexdata$M,col=rgb(0,0,0,1),freq=TRUE,xlim = range(y))
hist(sexdata$F,col=rgb(0.8,0.8,0.8,0.5),freq=TRUE,add=TRUE)
hist(sexdata$F,col=rgb(0,0,0,1),freq=TRUE,xlim = range(y))
hist(sexdata$M,col=rgb(0.8,0.8,0.8,0.5),freq=TRUE,add=TRUE)
y <- c(rnorm(50,mean = 115,sd = 3),rnorm(50,mean=110,sd=3))
#y <- c(120,107,110,116, 114, 111, 113, 117, 114, 112,110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
sex <- as.factor(c(rep("M",50),rep("F",50)))
sexdata<-split(y,sex)
hist(sexdata$F,col=rgb(0,0,0,1),freq=TRUE,xlim = range(y))
hist(sexdata$M,col=rgb(0.8,0.8,0.8,0.5),freq=TRUE,add=TRUE)
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hist(sexdata$M,col=rgb(0,0,0,1),xlim = range(y))
hist(sexdata$F,col=rgb(0.8,0.8,0.8,0.5),add=TRUE)
hist(sexdata$M,col=rgb(0,0,0,1),xlim = range(y))
hist(sexdata$F,col=rgb(0.8,0.8,0.8,0.5),add=TRUE)
hist(sexdata$M,col=c1,xlim = range(y))
hist(sexdata$F,col=c2,add=TRUE)
y <- c(rnorm(50,mean = 115,sd = 3),rnorm(50,mean=110,sd=3))
#y <- c(120,107,110,116, 114, 111, 113, 117, 114, 112,110, 111, 107, 108, 110, 105, 107, 106, 111, 111)
sex <- as.factor(c(rep("M",50),rep("F",50)))
sexdata<-split(y,sex)
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hist(sexdata$M,col=c1,xlim = range(y))
hist(sexdata$F,col=c2,add=TRUE)
range(y)
hist(sexdata$M,col=c1,xlim = c((min(y)-1),(max(y)+1))
hist(sexdata$M,col=c1,xlim = c((min(y)-1),(max(y)+1))
hist(sexdata$M,col=c1,xlim = c((min(y)-1),(max(y)+1)))
hist(sexdata$F,col=c2,add=TRUE)
(min(y)-1)
range(y)
hist(sexdata$M,col=c1,xlim = c((min(y)-5),(max(y)+5)))
hist(sexdata$F,col=c2,add=TRUE)
hist(sexdata$F,col=c2,xlim = c((min(y)-5),(max(y)+5)))
hist(sexdata$M,col=c1,add=TRUE)
y <- bumpus$TL
sex <- as.factor(bumpus$sex)
sexdata<-split(y,sex)
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hist(sexdata$F,col=c2,xlim = c((min(y)-5),(max(y)+5)))
sex
hist(sexdata$f,col=c2,xlim = c((min(y)-5),(max(y)+5)))
hist(sexdata$m,col=c1,add=TRUE)
hist(sexdata$m,col=c1,xlim = c((min(y)-5),(max(y)+5)))
hist(sexdata$f,col=c2,add=TRUE)
tapply(y,sex,mean)
mns <- tapply(y,sex,mean)
diff(tapply(y,sex,mean))
perm <- geomorph:::perm.index(length(y),iter=999)
perm[[1]]
perm[[10]]
D.rand <- unlist(lapply(1:1000,
function(j) diff(tapply(y[perm[[j]]],sex,mean))))
hist(D.rand)
geomorph:::plot.evolrate
arrows(D.rand[1], 50, D.rand[1], 5, length = 0.1, lwd = 2)
arrows(D.rand[1], 100, D.rand[1], 5, length = 0.1, lwd = 2)
y <- bumpus$TL
sex <- as.factor(bumpus$sex)
sexdata<-split(y,sex)
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
perm <- geomorph:::perm.index(length(y),iter=999)
D.rand <- unlist(lapply(1:1000,
function(j) diff(tapply(y[perm[[j]]],sex,mean))))
hist(D.rand,main=NULL,xlab = "Empirical Sampling Distribution (M-F)")
arrows(D.rand[1], 100, D.rand[1], 5, length = 0.1, lwd = 2)
text(x = D.rand[1],y=150,labels = "Observed")
text(x = D.rand[1],y=150,labels = "Obs")
hist(D.rand,main=NULL,xlab = "Empirical Sampling Distribution (M-F)")
arrows(D.rand[1], 100, D.rand[1], 5, length = 0.1, lwd = 2)
text(x = D.rand[1],y=150,labels = "Obs")
D.rand[1]-5
D.rand[1]-.05
res<-lm(bumpus$TL~bumpus$sex)
res
anova(res)
anova(res)$table
res2 <-anova(res)
res2
res$coefficients
res<-lm.rrpp(bumpus$TL~bumpus$sex)
res<-lm.rrpp(bumpus$TL~bumpus$sex, print.progress = FALSE)
anova(res)$table
res$coefficients
res$LM$coefficients
coef(lm(bumpus$TL~bumpus$sex))
y <- c(0, 2, 6, 4, 3, 3, 4, 7 )
gp <- factor(1,1,2,2,3,3,4,4)
y <- c(0, 2, 6, 4, 3, 3, 4, 7 )
gp <- factor(c(1,1,2,2,3,3,4,4))
coef(lm(y~gp))
model.matrix(gp)
model.matrix(~gp)
coef(lm(y~gp))
tapply(y,gp,mean)
model.matrix(~gp+0) #with intercept
coef(lm(y~gp))
tapply(y,gp,mean)
RRPP:::summary.pairwise
?RRPP:::summary.pairwise
library(knitr)
library(RRPP)
opts_chunk$set(echo = TRUE)
bumpus<-read.csv("lectureData/02.Resampling/bumpus.csv",header=T)
bumpus<-read.csv("lectureData/02.Resampling/bumpus.csv",header=T)
y <- bumpus$TL
sex <- as.factor(bumpus$sex)
sexdata<-split(y,sex)
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
gp <- as.factor(paste(bumpus$sex,bumpus$surv))
anova(lm(bumpus$TL~gp))
pairwise.t.test(bumpus$TL, gp, p.adj = "none")
mydat <- rrpp.data.frame(gp = gp, TL = bumpus$TL, sex=bumpus$sex,surv=bumpus$survived)
res <-summary(pairwise(lm.rrpp(TL~gp, data = mydat,print.progress = FALSE),groups = gp),test.type = "dist", stat.table = FALSE)
res$stat.table
res$pairwise.tables
res$pairwise.tables[[1]]
res$pairwise.tables[[4]]
res$pairwise.tables$D
150*12
library(caper)
?gls
?pgls
data(shorebird)
shorebird <- comparative.data(shorebird.tree, shorebird.data, Species, vcv=TRUE, vcv.dim=3)
mod2 <- pgls(log(Egg.Mass) ~ log(M.Mass), data=shorebird, lambda='ML', delta='ML')
mod2
mod2$param.CI
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/Lectures")
library(geomorph)
data("Pupfish")
pupfish <- Pupfish # Duplicate data frame
class(pupfish) <- "geomorph.data.frame" # Help R and geomorph work with the data
#Note: trajectory analysis found in the 'geomorph' package.
TA <- trajectory.analysis(f1 = coords ~ Pop * Sex, data = pupfish, print.progress = FALSE)
?trajectory.analysis
#Note: trajectory analysis found in the 'geomorph' package.
TA <- trajectory.analysis(fit = coords ~ Pop * Sex, data = pupfish, print.progress = FALSE)
#Note: trajectory analysis found in the 'geomorph' package.
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
library(RRPP)
data("Pupfish")
pupfish <- Pupfish # Duplicate data frame
class(pupfish) <- "RRPP.data.frame" # Help R and RRPP work with the data
#Note: trajectory analysis found in the 'RRPP' package.
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199, print.progress = FALSE)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
summary(TA, angle.type = "deg", col=Pupfish$Pop)
plot(TA, col=Pupfish$Pop)
plot(TA, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
plot(fit, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
data("Pupfish")
class(Pupfish)
data("Pupfish")
Pupfish$Group <- interaction(Pupfish$Sex, Pupfish$Pop)
#Note: trajectory analysis found in the 'RRPP' package.
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199, print.progress = FALSE)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
summary(TA, angle.type = "deg", col=Pupfish$Pop)
summary(TA, angle.type = "deg")
plot(fit, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
data("Pupfish")
Pupfish$Group <- interaction(Pupfish$Sex, Pupfish$Pop)
#Note: trajectory analysis found in the 'RRPP' package.
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199, print.progress = FALSE)
TA <- trajectory.analysis(fit, groups = Pupfish$Group,
traj.pts = Pupfish$Sex, print.progress = FALSE)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
summary(TA)
#############
### Analysis of sexual dimorphism vectors (factorial approach)
data(Pupfish)
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
# Magnitude difference (absolute difference between path distances)
summary(TA, attribute = "MD")
# Correlations (angles) between trajectories
summary(TA, attribute = "TC", angle.type = "deg")
# No shape differences between vectors
summary(TA, attribute = "SD")
# Plot results
TP <- plot(TA, pch = as.numeric(Pupfish$Pop) + 20, bg = as.numeric(Pupfish$Sex),
cex = 0.7, col = "gray")
add.trajectories(TP, traj.pch = c(21, 22), start.bg = 1, end.bg = 2)
legend("topright", levels(Pupfish$Pop), pch =  c(21, 22), pt.bg = 1)
summary(TA)
# Plot results
TP <- plot(TA, pch = as.numeric(Pupfish$Pop) + 20, bg = as.numeric(Pupfish$Sex),
cex = 1, col = "gray")
add.trajectories(TP, traj.pch = c(21, 22), start.bg = 1, end.bg = 2)
# Plot results
TP <- plot(TA, pch = as.numeric(Pupfish$Pop) + 20, bg = as.numeric(Pupfish$Sex),
cex = 1, col = "black")
add.trajectories(TP, traj.pch = c(21, 22), start.bg = 1, end.bg = 2)
#####  Interaction Term exploration: Trajectory Analysis
#Packages: RRPP
library(RRPP)
#Pairwise comparisons from MANOVA
data(Pupfish)
Pupfish$Group <- interaction(Pupfish$Sex, Pupfish$Pop)
fit.m <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.m)$table
summary(pairwise(fit.m,groups = Pupfish$Group))
plot(fit.m, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
#Pairwise comparisons while accounting for a covariate
Pupfish$logSize <- log(Pupfish$CS)
fit.slopes <- lm.rrpp(coords ~ logSize * Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.slopes)$table
PWS.gp <- pairwise(fit.slopes, groups = Pupfish$Group)
summary(PWS.gp)
anova(fit.slopes)$table
#Pairwise group comparisons while accounting for a covariate
Pupfish$logSize <- log(Pupfish$CS)
fit.slopes <- lm.rrpp(coords ~ logSize * Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.slopes)$table
PWS.gp <- pairwise(fit.slopes, groups = Pupfish$Group)
summary(PWS.gp)
plot(fit.slopes, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
#Comparison of slopes and lengths in MANCOVA
PWS <- pairwise(fit.slopes, groups = Pupfish$Group, covariate = Pupfish$logSize)
summary(PWS)
summary(PWS, test.type = "VC", angle.type = "deg")
plot(fit.slopes, type = "regression", reg.type = "RegScore", pch=21, bg = Pupfish$Group, predictor = Pupfish$logSize, cex=2)
legend("topleft", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
plot(fit.slopes, type = "regression", reg.type = "PredLine", pch=21, bg = Pupfish$Group, predictor = Pupfish$logSize, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
##### Trajectory Analysis
#1: Estimate trajectories from LS means in factorial mode
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 199)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
##### Trajectory Analysis
#1: Estimate trajectories from LS means in factorial mode
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 999)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop,
traj.pts = Pupfish$Sex, print.progress = FALSE)
# Magnitude difference (absolute difference between path distances)
summary(TA, attribute = "MD")
# Correlations (angles) between trajectories
summary(TA, attribute = "TC", angle.type = "deg")
# Plot results
TP <- plot(TA, pch = as.numeric(Pupfish$Pop) + 20, bg = as.numeric(Pupfish$Sex),
cex = 1, col = "black")
add.trajectories(TP, traj.pch = c(21, 22), start.bg = 1, end.bg = 2)
legend("topright", levels(Pupfish$Pop), pch =  c(21, 22), pt.bg = 1)
#2: Compare groups of pre-existing trajectories
data(motionpaths)
gdf <- geomorph.data.frame(trajectories = motionpaths$trajectories,
groups = motionpaths$groups)
TA <- trajectory.analysis(f1 = trajectories ~ groups,
traj.pts = 5, data=gdf,print.progress=FALSE)
TA <- trajectory.analysis(fit = trajectories ~ groups,
traj.pts = 5, data=gdf,print.progress=FALSE)
gdf <- geomorph.data.frame(trajectories = motionpaths$trajectories,
groups = motionpaths$groups)
#2: Compare groups of pre-existing trajectories
data(motionpaths)
fit <- lm.rrpp(trajectories ~ groups, data = motionpaths, iter = 199)
TA <- trajectory.analysis(fit, groups = motionpaths$groups, traj.pts = 5)
# Magnitude difference (absolute difference between path distances)
summary(TA, attribute = "MD")
# Correlations (angles) between trajectories
summary(TA, attribute = "TC", angle.type = "deg")
# Shape differences between trajectories
summary(TA, attribute = "SD")
TP <- plot(TA, pch = 21, bg = as.numeric(motionpaths$groups),
cex = 0.7, col = "gray")
add.trajectories(TP, traj.pch = 21, traj.bg = 1:4)

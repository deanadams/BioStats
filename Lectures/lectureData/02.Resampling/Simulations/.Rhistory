"x2:x3", "Residuals"))
aov.FRPP <- anova(fit.FRPP, error = c("Residuals",
"x2:x3", "Residuals"))
aov.param <- NULL
aov.param[1] <- 1-pf(aov.RRPP$table[1,5],aov.RRPP$table[1,1], aov.RRPP$table[4,1])
aov.param[2] <- 1-pf(aov.RRPP$table[2,5],aov.RRPP$table[2,1], aov.RRPP$table[3,1])
aov.param[3] <- 1-pf(aov.RRPP$table[3,5],aov.RRPP$table[3,1], aov.RRPP$table[4,1])
cat("iter", j, " ")
c(F.par = aov.RRPP$table$F[1:3],  # confirmed identical to lm as per above
F.RRPP = aov.RRPP$table$F[1:3],
F.FRPP = aov.FRPP$table$F[1:3],
F.RRPP.tBr = fit.RRPP.alt[,1],
p.par = aov.param,
p.RRPP = aov.RRPP$table$`Pr(>F)`[1:3],
p.FRPP = aov.FRPP$table$`Pr(>F)`[1:3],
p.RRPP.tBr =  apply(fit.RRPP.alt,1,RRPP:::pval)
)
}))
ResultF <- result[,c(1:12)]
ResultP <- result[,c(13:24)]
pairs(ResultF[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X1")
pairs(ResultF[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2")
pairs(ResultF[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2:X3")
pairs(ResultP[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X1")
pairs(ResultP[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2")
pairs(ResultP[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2:X3")
result <- t(sapply(1:nsims, function(j){
b1 <- 0.0
b2 <- 0.0
b3 <- 0.0
#  e <- rnorm(n) # e <- runif(n) #
e <- rlnorm(n) # e <- rexp(n,rate = 3)
x <- sample(rep(seq(1,g1),n/g1))
x2 <- c(rep(seq(0,(n/4-1)),  each = 2),rep(seq(0,(n/4-1)),  each = 2))
x3 <- rep(seq(0,(g3-1)), each = n/g3)
y <- (x * b1) + (x2 * b2) + (x3 * b3) + e
x <- factor(x); x2 <- factor(x2); x3 <- factor(x3)
df <- data.frame(x = x, x2 = x2, x3 = x3, y = y)
fit.param <- lm(y ~ x + x2/x3, data = df)
fit.RRPP <- lm.rrpp(y ~ x + x2/x3, data = df, print.progress = FALSE, SS.type = "III")
fit.FRPP <- lm.rrpp(y ~ x + x2/x3, data = df,
RRPP = FALSE, print.progress = FALSE, SS.type = "III")
fit.RRPP.alt <- rrpp.alt(y ~ x + x2/x3, data = df, SS.type = "III",
print.progress = FALSE, RRPP = TRUE, iter= iter)
aov.RRPP <-  anova(fit.RRPP, error = c("Residuals",
"x2:x3", "Residuals"))
aov.FRPP <- anova(fit.FRPP, error = c("Residuals",
"x2:x3", "Residuals"))
aov.param <- NULL
aov.param[1] <- 1-pf(aov.RRPP$table[1,5],aov.RRPP$table[1,1], aov.RRPP$table[4,1])
aov.param[2] <- 1-pf(aov.RRPP$table[2,5],aov.RRPP$table[2,1], aov.RRPP$table[3,1])
aov.param[3] <- 1-pf(aov.RRPP$table[3,5],aov.RRPP$table[3,1], aov.RRPP$table[4,1])
cat("iter", j, " ")
c(F.par = aov.RRPP$table$F[1:3],  # confirmed identical to lm as per above
F.RRPP = aov.RRPP$table$F[1:3],
F.FRPP = aov.FRPP$table$F[1:3],
F.RRPP.tBr = fit.RRPP.alt[,1],
p.par = aov.param,
p.RRPP = aov.RRPP$table$`Pr(>F)`[1:3],
p.FRPP = aov.FRPP$table$`Pr(>F)`[1:3],
p.RRPP.tBr =  apply(fit.RRPP.alt,1,RRPP:::pval)
)
}))
ResultF <- result[,c(1:12)]
ResultP <- result[,c(13:24)]
pairs(ResultF[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X1")
pairs(ResultF[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2")
pairs(ResultF[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2:X3")
pairs(ResultP[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X1")
pairs(ResultP[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2")
pairs(ResultP[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2:X3")
result <- t(sapply(1:nsims, function(j){
b1 <- 0.0
b2 <- 0.0
b3 <- 0.0
#  e <- rnorm(n) # e <- runif(n) # e <- rlnorm(n) #
e <- rexp(n,rate = 3)
x <- sample(rep(seq(1,g1),n/g1))
x2 <- c(rep(seq(0,(n/4-1)),  each = 2),rep(seq(0,(n/4-1)),  each = 2))
x3 <- rep(seq(0,(g3-1)), each = n/g3)
y <- (x * b1) + (x2 * b2) + (x3 * b3) + e
x <- factor(x); x2 <- factor(x2); x3 <- factor(x3)
df <- data.frame(x = x, x2 = x2, x3 = x3, y = y)
fit.param <- lm(y ~ x + x2/x3, data = df)
fit.RRPP <- lm.rrpp(y ~ x + x2/x3, data = df, print.progress = FALSE, SS.type = "III")
fit.FRPP <- lm.rrpp(y ~ x + x2/x3, data = df,
RRPP = FALSE, print.progress = FALSE, SS.type = "III")
fit.RRPP.alt <- rrpp.alt(y ~ x + x2/x3, data = df, SS.type = "III",
print.progress = FALSE, RRPP = TRUE, iter= iter)
aov.RRPP <-  anova(fit.RRPP, error = c("Residuals",
"x2:x3", "Residuals"))
aov.FRPP <- anova(fit.FRPP, error = c("Residuals",
"x2:x3", "Residuals"))
aov.param <- NULL
aov.param[1] <- 1-pf(aov.RRPP$table[1,5],aov.RRPP$table[1,1], aov.RRPP$table[4,1])
aov.param[2] <- 1-pf(aov.RRPP$table[2,5],aov.RRPP$table[2,1], aov.RRPP$table[3,1])
aov.param[3] <- 1-pf(aov.RRPP$table[3,5],aov.RRPP$table[3,1], aov.RRPP$table[4,1])
cat("iter", j, " ")
c(F.par = aov.RRPP$table$F[1:3],  # confirmed identical to lm as per above
F.RRPP = aov.RRPP$table$F[1:3],
F.FRPP = aov.FRPP$table$F[1:3],
F.RRPP.tBr = fit.RRPP.alt[,1],
p.par = aov.param,
p.RRPP = aov.RRPP$table$`Pr(>F)`[1:3],
p.FRPP = aov.FRPP$table$`Pr(>F)`[1:3],
p.RRPP.tBr =  apply(fit.RRPP.alt,1,RRPP:::pval)
)
}))
ResultF <- result[,c(1:12)]
ResultP <- result[,c(13:24)]
pairs(ResultF[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X1")
pairs(ResultF[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2")
pairs(ResultF[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "F-X2:X3")
pairs(ResultP[,c(1,4,7,10)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X1")
pairs(ResultP[,c(2,5,8,11)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2")
pairs(ResultP[,c(3,6,9,12)], pch=19,
labels = c("Parametric","RRPP", "FRPP","RRPP-Alt"), main = "P-X2:X3")
library(RRPP)
library(phytools)
library(caper)
source('rrpp-alt.R')
source('rrpp-rest.r')
nsims <- 100
iter <- 999
n <- 100
groups <- 2
b1 <- 0.0
b2 <- 0.0
tree <- pbtree (n = n)
Cov <- vcv.phylo(tree)
e <- fastBM(tree)
e2 <- geomorph:::fast.sim.BM
e-e2
d
e
e2
geomorph::compare.evol.rates
e2 <- geomorph:::sim.char.BM(tree)
e2 <- geomorph:::sim.char.BM(phy = tree, par = 1)
e2
e
hist(e)
hist(e2)
e2 <- geomorph:::sim.char.BM(phy = tree, par = 0)
hist(e2)
geomorph:::sim.char.BM
geomorph:::phy.sim.mat
geomorph:::Sig.eigen
geomorph:::fast.sim.BM
library(RRPP)
nsim <- 100
iter <- 999
n <- 100
groups <- 4
nsim <- 100
iter <- 999
n <- 100
groups <- 4
b1 <- 0.0
b2 <- 0.0
e <- rnorm(n) # e <- runif(n) # e <- rlnorm(n) # e <- rexp(n,rate = 3)
x <- rep(seq(0,(groups-1)), n/groups)
x2 <- rep(seq(0,(groups-1)), each = n/groups)
y <- (x * b1) + (x2 * b2) + (x * b1)*(x2 * b2) + e
x <- factor(x); x2 <- factor(x2)
df <- data.frame(x = x, x2 = x2, y = y)
x
x2
f1 = y ~ x+x2
data = df
SS.type = "II"
print.progress = FALSE
RRPP = TRUE
iter= iter
seed = "random"
int.first = FALSE
RRPP = TRUE
Cov = NULL
Parallel = FALSE
L <- as.list(environment())
#  L <- as.list(environment())
names(L)[which(names(L) == "f1")] <- "formula"
if(int.first) ko = TRUE else ko = FALSE
SS.type <- match.arg(SS.type)
dots <- list(...)
if(length(dots) > 0) {
w <- dots$weights
o <- dots$offset
} else w <- o <- NULL
########################  Run bits for each main effect
fit.full <- lm.rrpp(L$formula, data = data, SS.type = SS.type, Cov = Cov,
print.progress = print.progress, iter= 1)
Models <-fit.full$Models
Qr <- lapply(Models$reduced, function(x) x$qr)
Qf <- lapply(Models$full, function(x) x$qr)
k <- length(Qf)
Ur <- lapply(Qr, qr.Q)
Uf <- lapply(Qf, qr.Q)
n <- fit.full$LM$n
p <- fit.full$LM$p.prime
dfs <- Map(function(ur, uf) ncol(uf) - ncol(ur), Ur, Uf)
dfe <- n - ncol(Uf[[k]])
fastFit <- RRPP:::fastFit
fastLM <- RRPP:::fastLM
# fast function
getFs <- function(y, k, dfs, dfe, Ur, Uf) {
MS <- unlist(Map(function(ur, uf, d) sum((fastFit(ur, y, n, p) - fastFit(uf, y, n, p))^2)/d,
Ur, Uf, dfs))
MSE <- sum(fastLM(Uf[[k]], as.matrix(y))$residuals^2)/dfe
MS / MSE
}
n
#specific to THIS example only (4 gp; perfect)
n.gp <- n/4
it1 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it2 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it3 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it4 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it1
it1 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it2 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it3 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it4 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it5 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it6 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it7 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it8 <- RRPP:::perm.index(n.gp, iter,seed = seed)
it.x2 <- lapply(1:(iter+1), function(j) c(it1[[j]],n.gp+it2[[j]],
(2*n.gp)+it3[[j]],(3*n.gp)+it4[[j]]) )
it.x2[[1]]
it.x2[[2]]
it.x1 <- lapply(1:(iter+1), function(j) c(rbind(it5[[j]],n.gp+it6[[j]],
(2*n.gp)+it7[[j]],(3*n.gp)+it8[[j]])))
it.x1[[1]]
it.x1[[1]] <- it.x2[[1]]
source('rrpp-rest-4Gp.r')
##Simulation code for F-distributions for ANOVA
library(RRPP)
source('rrpp-alt.R')
source('rrpp-rest-4Gp.r')
nsim <- 100
iter <- 999
n <- 100
groups <- 4
df2 <- n-(2*(groups-1)+(groups-1)^2)-1 #full factorial
####
b1 <- 0.0
b2 <- 0.0
e <- lapply(1:nsim,function(j) rnorm(n))
x <- rep(seq(0,(groups-1)), n/groups)
x2 <- rep(seq(0,(groups-1)), each = n/groups)
y <- lapply(1:nsim, function(j) (x * b1) + (x2 * b2) + (x * b1)*(x2 * b2) + e[[j]])
x <- factor(x); x2 <- factor(x2)
df <- lapply(1:nsim, function(j) data.frame(x = x, x2 = x2, y = y[[j]]))
fit.RRPP <- lapply(1:nsim, function(j) lm.rrpp(y ~ x*x2, data = df[[j]],
print.progress = FALSE, RRPP = TRUE, iter= iter))
fit.FRPP <- lapply(1:nsim, function(j) lm.rrpp(y ~ x*x2, data = df[[j]],
print.progress = FALSE, RRPP = FALSE, iter= iter))
Fs.rrpp <- lapply(1:nsim, function(j) fit.RRPP[[j]]$ANOVA$Fs)
Fs.frpp <- lapply(1:nsim, function(j) fit.FRPP[[j]]$ANOVA$Fs)
Fs.rrpp.alt <- lapply(1:nsim, function(j) rrpp.alt(y ~ x*x2, data = df[[j]],
print.progress = FALSE, RRPP = TRUE, iter= iter) )
Fs.rrpp.rest <- lapply(1:nsim, function(j) rrpp.rest(y ~ x+x2, data = df[[j]],
print.progress = FALSE, RRPP = TRUE, iter= iter) )
Fs.rrpp.rest[[1]]
dim(Fs.rrpp.rest[[1]])
sim.results <- list(Fs.rrpp = Fs.rrpp, Fs.rrpp.alt = Fs.rrpp.alt,
Fs.frpp = Fs.frpp, Fs.rrpp.rest = Fs.rrpp.rest)
save(sim.results, file = "Results/F-dist-OLS-Fact.results.Rdata")
#X1
df.theory <- df(density(Fs.rrpp[[1]][1,])$x, groups-1, df2)
#X1
df.theory <- df(density(Fs.rrpp[[1]][1,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][1,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][1,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][1,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][1,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X1", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
#X2
df.theory <- df(density(Fs.rrpp[[1]][2,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][2,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][2,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][2,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][2,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
png(file="Figs/OLS.FDist-1.png")
#X1
df.theory <- df(density(Fs.rrpp[[1]][1,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][1,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][1,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][1,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][1,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X1", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
dev.off()
png(file="Figs/OLS.FDist-2.png")
#X2
df.theory <- df(density(Fs.rrpp[[1]][2,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][2,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][2,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][2,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][2,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
dev.off()
library(phytools)
library(geiger)
library(RRPP)
source('rrpp-alt.R')
source('rrpp-rest-4Gp.r')
nsim <- 100
iter <- 999
n <- 100
groups <- 4
df2 <- n-(2*(groups-1)+(groups-1)^2)-1 #full factorial
b1 <- 0.0
b2 <- 0.0
tree <- pbtree (n = n,nsim = nsim)
Cov <- lapply(1:nsim, function(j) vcv.phylo(tree[[j]]))
e <- lapply(1:nsim,function(j) fastBM(tree[[j]]))
x <- lapply(1:nsim, function(j) rep(seq(0,(groups-1)), n/groups))
x2 <- lapply(1:nsim, function(j) rep(seq(0,(groups-1)), each = n/groups))
for (i in 1:nsim){ names(x[[i]]) <- names(x2[[i]]) <- names(e[[i]]) }
y <- lapply(1:nsim, function(j) (x[[j]] * b1) + (x2[[j]] * b2) +
(x[[j]] * b1)*(x2[[j]] * b2) + e[[j]] )
for (i in 1:nsim){
x[[i]] <- factor(x[[i]]); x2[[i]] <- factor(x2[[i]])
}
df <- lapply(1:nsim, function(j) data.frame(x = x[[j]], x2 = x2[[j]],
y = y[[j]], species = names(x[[j]])))
fit.RRPP <- lapply(1:nsim, function(j) lm.rrpp(y ~ x*x2, data = df[[j]],
Cov = Cov[[j]], print.progress = FALSE, RRPP = TRUE, iter= iter))
fit.FRPP <- lapply(1:nsim, function(j) lm.rrpp(y ~ x*x2, data = df[[j]],
Cov = Cov[[j]], print.progress = FALSE, RRPP = FALSE, iter= iter))
Fs.rrpp <- lapply(1:nsim, function(j) fit.RRPP[[j]]$ANOVA$Fs)
Fs.frpp <- lapply(1:nsim, function(j) fit.FRPP[[j]]$ANOVA$Fs)
Fs.rrpp.alt <- lapply(1:nsim, function(j) rrpp.alt(y ~ x*x2, data = df[[j]],
Cov = Cov[[j]], print.progress = FALSE, RRPP = TRUE, iter= iter) )
Fs.rrpp.rest <- lapply(1:nsim, function(j) rrpp.rest(y ~ x+x2, data = df[[j]],
Cov = Cov[[j]], print.progress = FALSE, RRPP = TRUE, iter= iter) )
sim.results <- list(Fs.rrpp = Fs.rrpp, Fs.rrpp.alt = Fs.rrpp.alt,
Fs.frpp = Fs.frpp,Fs.rrpp.rest = Fs.rrpp.rest)
save(sim.results, file = "Results/F-dist-GLS-Fact.results.Rdata")
#X1
df.theory <- df(density(Fs.rrpp[[1]][1,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][1,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][1,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][1,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][1,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X1", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X1", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
#X2
df.theory <- df(density(Fs.rrpp[[1]][2,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][2,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][2,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][2,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][2,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
png(file="Figs/GLS.FDist-1.png")
#X1
df.theory <- df(density(Fs.rrpp[[1]][1,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][1,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][1,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][1,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][1,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X1", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
dev.off()
png(file="Figs/GLS.FDist-2.png")
#X2
df.theory <- df(density(Fs.rrpp[[1]][2,])$x, groups-1, df2)
df.rrpp.alt <- lapply(1:nsim, function(j) density(Fs.rrpp.alt[[j]][2,]))
df.rrpp.rest <- lapply(1:nsim, function(j) density(Fs.rrpp.rest[[j]][2,]))
df.rrpp <- lapply(1:nsim, function(j) density(Fs.rrpp[[j]][2,]))
df.frpp <- lapply(1:nsim, function(j) density(Fs.frpp[[j]][2,]))
plot(df.rrpp[[1]]$x, df.theory, xlab = "F", ylab = "Density",
main = "X2", type = "n",ylim = c(0,2), xlim = c(0, 20))
for (j in 1:nsim){ points(df.rrpp.alt[[j]]$x,df.rrpp.alt[[j]]$y,
type ="l", lwd=3,lty=1, col= 4 )}
for (j in 1:nsim){ points(df.rrpp.rest[[j]]$x,df.rrpp.rest[[j]]$y,
type ="l", lwd=3,lty=1, col= "orange" )}
for (j in 1:nsim){ points(df.frpp[[j]]$x,df.frpp[[j]]$y,
type ="l", lwd=3,lty=1, col="gray")}
for (j in 1:nsim){ points(df.rrpp[[j]]$x, df.rrpp[[j]]$y,
type = "l", lwd=1,col = 2)}
points(df.rrpp[[1]]$x,df.theory,type ="l", lwd=3,lty=2)
legend("topright", c("Theory", "RRPP", "FRPP", "RRPP-alt", "Restricted"), lwd=2, lty = 1,
col = c(1,2,"gray",4,"orange"))
dev.off()

sample.interval=20000
"lazyLoadDBfetch" 
"strtrim" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stdout" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"maybe_truncate" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"unique" "FUN" "lapply" "readLineDensity" "plot.aprof" "plot" 
"order" "factor" "table" "readLineDensity" "plot.aprof" "plot" 
".External2" "plot.new" "plot.default" "graphics::plot" "plot.aprof" "plot" 
"text.default" "graphics::text" "PlotSourceCode" "plot.aprof" "plot" 
"text.default" "graphics::text" "PlotSourceCode" "plot.aprof" "plot" 
"graphics::mtext" "plot.aprof" "plot" 
"save" "<Anonymous>" 
"close.connection" "close" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"close.connection" "close" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"gzfile" "save" "<Anonymous>" 
"save" "<Anonymous>" 
"close.connection" "close" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".External" "grDevices:::png" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"close.connection" "close" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"capabilities" ".rs.hasCapability" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"gzfile" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"Sys.info" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"close.connection" "close" "save" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
"grepl" ".make_numeric_version" "R_system_version" "package_version" "getRversion" "grDevices::recordPlot" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".Call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "<Anonymous>" 
".rs.scalar" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"cb$putcode" "cmpSym" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"newSS" ".Call" "microbenchmark" 
"rbind" "newSS" ".Call" "microbenchmark" 
"$<-" "glht.mcp" "multcomp::glht" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" "microbenchmark" 
"solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"as.matrix" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"exists" "findCenvVar" "getInlineInfo" "isBaseVar" "isLoopTopFun" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "hat.calc" ".Call" "microbenchmark" 
"nrow" "sample" "hat.calc" ".Call" "microbenchmark" 
"t" "all.calc" ".Call" "microbenchmark" 
"solve" "all.calc" ".Call" "microbenchmark" 
"t" "solve" "all.calc" ".Call" "microbenchmark" 
"t.default" "t" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"rownames" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"as.matrix.default" "as.matrix" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"t.default" "t" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"as.matrix.default" "as.matrix" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"NROW" "rownames" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "hat.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "hat.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "hat.calc" ".Call" "microbenchmark" 
"is.finite" "sample" "hat.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"t.default" "t" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"t" "solve" "all.calc" ".Call" "microbenchmark" 
"t" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"%*%" "solve" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"%*%" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"colnames<-" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "hat.calc" ".Call" "microbenchmark" 
"%*%" "hat.calc" ".Call" "microbenchmark" 
"solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"t.default" "t" "solve" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"hat.calc" ".Call" "microbenchmark" 
"dim" "nrow" "sample" "hat.calc" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"all.calc" ".Call" "microbenchmark" 
"sample.int" "sample" "all.calc" ".Call" "microbenchmark" 
"as.matrix" "solve.default" "solve" "all.calc" ".Call" "microbenchmark" 
"c" "apply" "sweepLetters" "insert_absorb" "cld.summary.glht" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"ifelse" "paste0" "arrLenstr" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"as.list" "vapply" ".getXlevels" "lm" ".Call" "microbenchmark" 
"lapply" ".getXlevels" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"is.ordered" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"terms" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"solve.default" "solve" "crossprod" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
"%in%" "[[.data.frame" "[[" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"[.data.frame" "[" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"is.matrix" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"data.class" "all.equal.numeric" "all.equal" "isTRUE" "chkcorr" "checkmvArgs" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"stopifnot" "extr" "cld.summary.glht" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"prettyNum" "format.default" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" "print.microbenchmark" "<Anonymous>" 
".Call" ".rs.isBrowserActive" "<Anonymous>" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"%*%" "solve" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"rownames" "solve.default" "solve" "crossprod" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"<Anonymous>" "[[.data.frame" "[[" "model.response" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Fortran" "qr.default" "qr" "is.qr" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"t.default" "t" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
".Fortran" "qr.default" "qr" "is.qr" "qr.coef" ".Call" "microbenchmark" 
"diag" "solve.default" "solve" "crossprod" ".Call" "microbenchmark" 
"solve.default" "solve" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"length" "length" "dim.data.frame" "dim" "dim" "nrow" "logical" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"paste0" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"structure" "GenzBretz" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" "microbenchmark" 
"getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "%*%" ".Call" "microbenchmark" 
"parent.env" "findCenvVar" "findFunDef" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "%*%" ".Call" "microbenchmark" 
"match.fun" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.recordTraceback" "<Anonymous>" "%*%" ".Call" "microbenchmark" 
"ifelse" "paste0" "arrLenstr" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"structure" "lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"solve.default" "solve" "crossprod" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"crossprod" "solve" "crossprod" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"crossprod" "solve" "crossprod" ".Call" "microbenchmark" 
"model.matrix.default" "model.matrix" "lm" ".Call" "microbenchmark" 
"paste0" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
"na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"$" "model.weights" "as.vector" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"$" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"is.na" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"$" "qr.coef" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Fortran" "qr.default" "qr" "is.qr" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"%*%" "solve" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"is.na" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"as.vector" "lm" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
"crossprod" "solve" "crossprod" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"[.data.frame" "[" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" ".Call" "microbenchmark" 
"crossprod" "crossprod" ".Call" "microbenchmark" 
".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"%*%" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".Fortran" "qr.default" "qr" "is.qr" "qr.coef" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" ".Call" "microbenchmark" 
"lm.fit" "lm" ".Call" "microbenchmark" 
"solve.default" "solve" ".Call" "microbenchmark" 
"crossprod" "solve" "crossprod" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Fortran" "qr.coef" ".Call" "microbenchmark" 
".Call" ".lm.fit" ".Call" "microbenchmark" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
".C" "probval.GenzBretz" "probval" "mvt" "pmvt" "pfct" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 
"structure" "format" "format.factor" "format" "format.data.frame" "as.matrix" "print.data.frame" "print" "print.microbenchmark" "<Anonymous>" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"rnorm" "matrix" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"aperm.default" "aperm" "apply" ".Call" "microbenchmark" 
"is.numeric" "mean.default" "FUN" "apply" ".Call" "microbenchmark" 
"findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "fn1" ".Call" "microbenchmark" 
"findVar" "cmpSym" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"colMeans" ".Call" "microbenchmark" 
"mean.default" "FUN" "apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"aperm.default" "aperm" "apply" ".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"aperm.default" "aperm" "apply" ".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"aperm.default" "aperm" "apply" ".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"mean.default" "FUN" "apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"aperm.default" "aperm" "apply" ".Call" "microbenchmark" 
"FUN" "apply" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"fn1" ".Call" "microbenchmark" 
"cat" "print.microbenchmark" "<Anonymous>" 
"rnorm" "matrix" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
"gc" "microbenchmark" 
".Call" "microbenchmark" 
"sub" "packFrameName" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"eval" "match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"svd" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pmatch" "cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"dim" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"sys.function" "formals" "match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"as.matrix.default" "as.matrix" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"as.matrix" "svd" "pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"vapply" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"delayedAssign" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"matrix" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"eval" "match.arg" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"as.matrix" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"stopifnot" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"...elt" "stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "svd" "pls.slow" ".Call" "microbenchmark" 
"order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"svd" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"get" "match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"eval" "match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"matrix" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"formals" "match.arg" "cov" "pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"is.data.frame" "cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"rbind" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"vapply" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pmatch" "cor" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"matrix" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"ifelse" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sys.function" "formals" "match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"eval" "match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"c" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"c" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "svd" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"eval" "match.arg" "cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"ifelse" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"is.finite" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"all" "stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"matrix" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sys.function" "formals" "match.arg" "cov" "pls.slow" ".Call" "microbenchmark" 
"scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"matrix" "La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample" "pls.slow" ".Call" "microbenchmark" 
"parent.frame" "match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"double" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"as.matrix" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"t" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"stopifnot" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"stopifnot" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"get" "match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"sys.function" "formals" "match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"vapply" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"as.character" "eval" "match.arg" "cor" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"La.svd" "svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"match.arg" "order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"...elt" "stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"order" "aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"rbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cor" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"svd" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"is.data.frame" "cor" "pls.slow" ".Call" "microbenchmark" 
"array" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"as.matrix" "svd" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"which" "ifelse" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cbind" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "sample" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"match.fun" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"cov" "pls.slow" ".Call" "microbenchmark" 
"colMeans" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"aperm.default" "aperm" "sweep" "scale.default" "scale" "pls.slow" ".Call" "microbenchmark" 
"stopifnot" "cor" "pls.slow" ".Call" "microbenchmark" 
"%*%" "pls.slow" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"min" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"sample.int" "<Anonymous>" "mapply" "Map" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"crossprod" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"c" "La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"La.svd" "FUN" "lapply" "pls.fast" ".Call" "microbenchmark" 
"lapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"%*%" "is.data.frame" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"stopifnot" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"match.arg" "cor" "FUN" "lapply" "sapply" "pls.fast" ".Call" "microbenchmark" 
"grep" "RET$pfunction" "test" "summary.glht" "summary" "cld" "cld.glht" "multcomp::cld" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "summary.microbenchmark" "summary" "print.microbenchmark" "<Anonymous>" 

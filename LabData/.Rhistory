data = gdf)
summary(mosquito.sym)
mosquito.sym <- bilat.symmetry(A = wingshape, ind = ind, side = side,
replicate = replicate, object.sym = FALSE, RRPP = TRUE, iter = 999,
data = gdf)
summary(mosquito.sym)
plot(mosquito.sym, warpgrids = TRUE)
# Previous example, performing GPA first
Y.gpa <- gpagen(mosquito$wingshape)
mosquito.sym2 <- bilat.symmetry(A = Y.gpa, ind = ind, side = side,
replicate = replicate, object.sym = FALSE, RRPP = TRUE, iter = 999,
data = gdf)
summary(mosquito.sym2)
summary(mosquito.sym) # same results
data(lizards)
gdf <- geomorph.data.frame(shape = lizards$coords,
ind = lizards$ind,
replicate = lizards$rep)
liz.sym <- bilat.symmetry(A = shape, ind = ind, rep = rep,
object.sym = TRUE,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE, iter = 999)
summary(liz.sym)
.23/.28
(.236788+.009432+.032119+.006283) / .284622
data(scallops)
gdf <- geomorph.data.frame(shape = scallops$coorddata,
ind = scallops$ind)
scallop.sym <- bilat.symmetry(A = shape, ind = ind,
object.sym = TRUE,
curves= scallops$curvslide, surfaces = scallops$surfslide,
land.pairs=scallops$land.pairs, data = gdf, RRPP = TRUE, iter = 999)
summary(scallop.sym)
(.236788+.009432+.032119) / .284622
?procD.lm
scallop.sym <- bilat.symmetry(A = shape, ind = ind, SS.type = "III"
object.sym = TRUE,
curves= scallops$curvslide, surfaces = scallops$surfslide,
land.pairs=scallops$land.pairs, data = gdf, RRPP = TRUE, iter = 999)
scallop.sym <- bilat.symmetry(A = shape, ind = ind, SS.type = "III",
object.sym = TRUE,
curves= scallops$curvslide, surfaces = scallops$surfslide,
land.pairs=scallops$land.pairs, data = gdf, RRPP = TRUE, iter = 999)
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
bumpus<-read.csv("Data/bumpus.csv",header=T)
bumpus.data<-as.matrix(bumpus[,(5:13)])  #note: 'as.matrix' forces data type
View(bumpus.data)
dim(bumpus.data)
pairs(bumpus.data)
cor(bumpus.data)    #correlation  matrix
dim()  cor(bumpus.data))    #correlation  matrix
dim(  cor(bumpus.data))    #correlation  matrix
vcv.bumpus<-var(bumpus.data)    #covariance matrix
var(bumpus.data)
a<-matrix(c(1,0,4,2,-1,1),nrow=3)
a
matrix(c(1,0,4,2,-1,1),nrow=3)
matrix(c(1,0,4,2,-1,1),nrow=3,byrow=T)
b<-matrix(c(1,-1,2,1,1,0),nrow=2)
a
b
c<-t(a)	#matrix transpose
a
c
d<-matrix(c(2,3,1,4),nrow=2)
d
det(d)	#matrix determinant
exp(determinant(d)$modulus)  #another way
det(var(bumpus.data))
var(bumpus.data)
a
b
c
#Matrix addition and subtraction
b+c
b-c
a+b		##NOTE: non-conformable matrices (check rxc of your matrices!)
a#elementwise multiplication (Hadamard product)
b
c
b
c*b
diag(5)  #identity matrix with 5 rows/cols
?diag
diag(10, 3, 4)
diag(10, 4, 4)
# matrix multiplication
a%*%b		## %*% is symbol for matrix multiplication
a
b
# matrix multiplication
a%*%b		## %*% is symbol for matrix multiplication
b%*%a		## matrix order matters
#__________________________________________________________________________#
# matrix inversion
d
solve(d)
d %*% solve(d)
solve(vcv.bumpus)
### example of redundant variables causing singularities
a <- rnorm(10)
b <-rnorm(10)
a
b
c <- a+b
cbind(a,b,c)
cov.dat <- cov(cbind(a,b,c))
cov.dat
solve(cov.dat)
det(cov.dat)
# Generalized Inverse
library(MASS)
ginv(vcv.bumpus)		#useful for singular covariance matrices (when P>N, or reduncancies in data)
ginv(cov.dat)
#__________________________________________________________________________#
### Matrix decomposition
#eigen-analysis
eigen(vcv.bumpus)			#decomposition of square-symmetric matrices
#singular-value decomposition
svd(vcv.bumpus)			#Same results as 'eigen'
#__________________________________________________________________________#
#GLM in matrix form
rm(list=ls())
x<-matrix(1,10)
x2<-matrix(c(1,1,1,1,1,0,0,0,0,0))
xnew<-cbind(x,x2)
y<-matrix(c(5,4,4,4,3,7,5,6,6,6))
yreg<-matrix(c(1,3,4,6,8,7,9,11,10,13))
xreg<-matrix(c(1,2,3,4,5,6,7,8,9,10))
xnewreg<-cbind(x,xreg)
x
x2
xnew
y
x2
#__________________________________________________________________________#
#ANOVA
model1<-lm(y~x2)
model1
model.matrix(model1)
xnew
summary(model1)
coef(model1)
b<-solve(t(xnew)%*%xnew)%*%t(xnew)%*%y
b
predict(model1)
yhat<-xnew%*%b
yhat
y-yhat
resid(model1)
SSFull<-t(y-yhat)%*%(y-yhat)
x
bred<-solve(t(x)%*%x)%*%t(x)%*%y
yhatred<-x%*%bred
yhatred
SSRed<-t(y-yhatred)%*%(y-yhatred) #Is SSTot
SSModel<-SSRed-SSFull
anova(model1)
SSModel
SSFull
SSRed
xreg
yreg
xnewreg
#__________________________________________________________________________#
#Regression
model2<-lm(yreg~xreg)
breg<-solve(t(xnewreg)%*%xnewreg)%*%t(xnewreg)%*%yreg
summary(model2)
breg
predict(model2)
yhatreg<-xnewreg%*%breg
yhatreg
SSFullreg<-t(yreg-yhatreg)%*%(yreg-yhatreg)
bredreg<-solve(t(x)%*%x)%*%t(x)%*%yreg
yhatredreg<-x%*%bredreg
yhatredreg
SSRedreg<-t(yreg-yhatredreg)%*%(yreg-yhatredreg) #Is SSTot
SSModelreg<-SSRedreg-SSFullreg
anova(model2)
SSModelreg
SSFullreg
SSRedreg
b
xnew
xnew%*%b
library(microbenchmark)
x<-matrix(rnorm(10000),ncol=2)
dim(x)
xf<-cbind(1,x)
y<-matrix(rnorm(nrow(x)))
dim(y)
lm(y~x)  #Common method
solve(t(xf)%*%xf)%*%t(xf)%*%y
crossprod(solve(crossprod(xf)),crossprod(xf,y))
lm.fit(xf,y)$coefficients
.lm.fit(xf,y)$coefficients  ### NOTE: a very low-level function (cannot use in packages submitted to CRAN)
qr.coef(qr(xf),y)
microbenchmark(
lm(y~x),
solve(t(xf)%*%xf)%*%t(xf)%*%y,
crossprod(solve(crossprod(xf)),crossprod(xf,y)),
lm.fit(xf,y),.lm.fit(xf,y),
qr.coef(qr(xf),y)
)
###NOTE that the best implementation can change with the size of the data matrix
#Large X univ. Y
x<-matrix(rnorm(10000),ncol=50)
xf<-cbind(1,x)
y<-matrix(rnorm(nrow(x)))
microbenchmark(
lm(y~x),
solve(t(xf)%*%xf)%*%t(xf)%*%y,
crossprod(solve(crossprod(xf)),crossprod(xf,y)),
lm.fit(xf,y),.lm.fit(xf,y),
qr.coef(qr(xf),y)
)
##Large Y univ. X
y<-matrix(rnorm(10000),ncol=100)
x<-matrix(rnorm(nrow(y)))
xf<-cbind(1,x)
microbenchmark(
lm(y~x),
solve(t(xf)%*%xf)%*%t(xf)%*%y,
crossprod(solve(crossprod(xf)),crossprod(xf,y)),
lm.fit(xf,y),.lm.fit(xf,y),
qr.coef(qr(xf),y)
)
#large Y and X
y<-matrix(rnorm(20000),ncol=100)
x<-matrix(rnorm(10000),ncol=50)
xf<-cbind(1,x)
microbenchmark(
lm(y~x),
solve(t(xf)%*%xf)%*%t(xf)%*%y,
crossprod(solve(crossprod(xf)),crossprod(xf,y)),
lm.fit(xf,y),.lm.fit(xf,y),
qr.coef(qr(xf),y)
)
#large Y and X
y<-matrix(rnorm(20000),ncol=100)
x<-matrix(rnorm(10000),ncol=50)
xf<-cbind(1,x)
microbenchmark(
lm(y~x),
solve(t(xf)%*%xf)%*%t(xf)%*%y,
crossprod(solve(crossprod(xf)),crossprod(xf,y)),
lm.fit(xf,y),.lm.fit(xf,y),
qr.coef(qr(xf),y)
)
library(RRPP)
library(vegan)
library(mvabund)
bumpus <- read.csv("Data/bumpus.csv",header=T)
bumpus.data <- log(as.matrix(bumpus[,(5:13)])) # matrix of linear measurements
sex <- as.factor(bumpus[,2])
surv <- as.factor(bumpus[,4])
SexBySurv <- paste(sex,surv)
TotalLength <- bumpus.data[,1]
Y <- bumpus.data[,-1]
mydat <- rrpp.data.frame(Y=Y,sex=sex,surv=surv,TotalLength=TotalLength,SexBySurv = SexBySurv)
#__________________________________________________________________________#
#Describe your data
(100*apply(bumpus.data,2,sd)) /apply(bumpus.data,2,mean)  # CV: Coefficient of Variation
cor(bumpus.data)
pairs(bumpus.data)
var(bumpus.data)
vcv.bumpus
var(scale(bumpus.data))
dist(bumpus.data)
#__________________________________________________________________________#
#single factor MANOVA
model1 <- lm(bumpus.data~sex)
summary(model1)	#yields a set of univariate analyses
summary(manova(model1))	#does multivariate test (using Pillai's)
summary(manova(model1),test="Wilks")	#does multivariate test (using Wilks)
##### MANOVA via RRPP
model.rrpp <- lm.rrpp(Y~sex,data = mydat, print.progress = FALSE)
anova(model.rrpp)
plot(model.rrpp, type = "PC", pch=21, bg = sex)  #PC PLOT!
legend("topright", levels(sex), pch = 21, pt.bg = 1:4)
##When parametric methods break down
Ynew <- matrix(rnorm(10000), nrow=100) #100 x 100 matrix: N=p
gp <- gl(2,50)
summary(manova(lm(Ynew~gp)))  #parametric algebra cannot be completed
anova(lm.rrpp(Ynew~gp,print.progress = FALSE))  #NO problem with RRPP!
#__________________________________________________________________________#
#Factorial MANOVA
model2<-lm(bumpus.data~sex*surv)
summary(manova(model2))
#Factorial MANOVA via RRPP
model2.rrpp <- lm.rrpp(Y~sex*surv,data = mydat, print.progress = FALSE)
anova(model2.rrpp)
groups <- interaction(mydat$sex, mydat$surv)
plot(model2.rrpp, type = "PC", pch=21, bg = groups)
legend("topright", levels(groups), pch = 21, pt.bg = 1:4)
#Also in vegan (FRPP only)
adonis(formula = Y~sex*surv, method = "euclidean" )
#Pairwise comparisons
PW <- pairwise(model2.rrpp,groups = SexBySurv, print.progress = FALSE)
summary(PW,test.type = "dist")  #No pairwise groups significant AFTER accounting for main effects!
model.null <- lm.rrpp(Y~1,data=mydat, print.progress = FALSE)
summary(pairwise(model2.rrpp, model.null, groups = SexBySurv,
print.progress = FALSE),test.type = "dist")
#__________________________________________________________________________#
### Multivariate Regression
summary(manova(lm(Y~TotalLength)))
model.reg <- lm.rrpp(Y~TotalLength, data = mydat, print.progress = FALSE)
anova(model.reg)
### Visualizing multivariate regression
plot(model.reg, type = "regression", reg.type = "RegScore",
predictor = mydat$TotalLength, pch=19)
#__________________________________________________________________________#
#MANCOVA
summary(manova(lm(Y~TotalLength*sex*surv)))
summary(manova(lm(Y~TotalLength+sex*surv))) # FIT COMMON SLOPE
#MANCOVA via RRPP
model.mancova <- lm.rrpp(Y~TotalLength*sex*surv, data =mydat, print.progress = FALSE)
anova(model.mancova)
#Pairwise comparisons of slopes: NOTE: Used here for illustrative purposes only!
# Interaction should show evidence justifying this analysis
PW.mancova <- pairwise(model.mancova, groups = SexBySurv, covariate = TotalLength, print.progress = FALSE)
summary(PW.mancova, test.type = "VC", angle.type = "deg")
### Visualizing MANCOVA
plot(model.mancova, type = "regression", reg.type = "RegScore",
predictor = mydat$TotalLength, pch=19, col = as.numeric(groups))
plot(model.mancova, type = "regression", reg.type = "PredLine",
predictor = mydat$TotalLength, pch=19,
col = as.numeric(groups))
#________________________________________________________________________#
# A more complex example
data(Pupfish)
Pupfish$Group <- interaction(Pupfish$Sex, Pupfish$Pop)
#MANOVA via RRPP
fit.m <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.m)$table
summary(pairwise(fit.m,groups = Pupfish$Group),test.type = "dist")
plot(fit.m, type = "PC", pch=21, bg = Pupfish$Group, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
#MANCOVA via RRPP
Pupfish$logSize <- log(Pupfish$CS)
fit.slopes <- lm.rrpp(coords ~ logSize * Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.slopes)$table
PWS <- pairwise(fit.slopes, groups = Pupfish$Group, covariate = Pupfish$logSize)
summary(PWS, test.type = "VC", angle.type = "deg")
plot(fit.slopes, type = "regression", reg.type = "RegScore", pch=21, bg = Pupfish$Group, predictor = Pupfish$logSize, cex=2)
legend("topleft", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
plot(fit.slopes, type = "regression", reg.type = "PredLine", pch=21, bg = Pupfish$Group, predictor = Pupfish$logSize, cex=2)
legend("topright", levels(Pupfish$Group), pch = 21, pt.bg = 1:4)
#________________________________________________________________________#
#MANCOVA with Y as Distance matrix
mydat$Ydist <- dist(Y)
mancova.dist <- lm.rrpp (Ydist~TotalLength*sex*surv, data =mydat, print.progress = FALSE)
anova(mancova.dist)
data("spider")  #species abundance data across localities
dim(spider$abund)
# transformation of raw data (log+1)
spid <- data.frame(spider$x)
spid$abund <- as.matrix(spider$abund)
spid$logY <- as.matrix(log(spider$abund + 1)) # log-transform
### 1: MANOVA via RRPP on log(Y)
fitLM <- lm.rrpp(logY ~ soil.dry + bare.sand + fallen.leaves + moss
+ herb.layer + reflection,
data = spid, iter = 999, SS.type = "II",
print.progress = FALSE)
anova(fitLM)
pca <- plot(fitLM, type = "PC")
text(pca$PC.points, rownames(pca$PC.points), pos = 1, cex = 0.5)
### 2: MANOVA via RRPP on Bray-Curtis distance (ala Anderson)
Db <- vegdist(spid$abund, method="bray")
fitD <- lm.rrpp(Db ~ soil.dry + bare.sand + fallen.leaves + moss
+ herb.layer + reflection,
data = spid, iter = 999, SS.type = "II",
print.progress = FALSE)
anova(fitD)  #pretty similar
### 3: Generalized linear models: mvAbund (ala Wharton)
spiddat <- mvabund(spider$abund)
X <- spider$x
#To fit a log-linear model assuming counts are poisson:
#NOTE: mvabund fits generlized LM to each Y-variable separately, then sums F-values
glm.spid <- manyglm(spiddat~X, family="poisson")
summary(glm.spid)   #not the same as above
anova(glm.spid)
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
library(RRPP)
library(vegan)
library(mvabund)
bumpus <- read.csv("Data/bumpus.csv",header=T)
bumpus.data <- log(as.matrix(bumpus[,(5:13)])) # matrix of linear measurements
sex <- as.factor(bumpus[,2])
surv <- as.factor(bumpus[,4])
SexBySurv <- paste(sex,surv)
TotalLength <- bumpus.data[,1]
Y <- bumpus.data[,-1]
View(bumpus.data)
mydat <- rrpp.data.frame(Y=Y,sex=sex,surv=surv,TotalLength=TotalLength,SexBySurv = SexBySurv)
#__________________________________________________________________________#
#Describe your data
(100*apply(bumpus.data,2,sd)) /apply(bumpus.data,2,mean)  # CV: Coefficient of Variation
apply(bumpus.data,2,sd)
cor(bumpus.data)
pairs(bumpus.data)
var(bumpus.data)
var(bumpus.data)
vcv.bumpus
var(bumpus.data)
var(scale(bumpus.data))
cor(bumpus.data)
dist(bumpus.data)
as.matrix(dist(bumpus.data))
?dist
?vegdist
dim(bumpus.data)
#__________________________________________________________________________#
#single factor MANOVA
model1 <- lm(bumpus.data~sex)
summary(model1)	#yields a set of univariate analyses
anova(model1)
manova(model1)
summary(manova(model1))	#does multivariate test (using Pillai's)
summary(manova(model1),test="Wilks")	#does multivariate test (using Wilks)
?summary.manova
##### MANOVA via RRPP
model.rrpp <- lm.rrpp(Y~sex,data = mydat, print.progress = FALSE)
anova(model.rrpp)
plot(model.rrpp, type = "PC", pch=21, bg = sex)  #PC PLOT!
legend("topright", levels(sex), pch = 21, pt.bg = 1:4)
##When parametric methods break down
Ynew <- matrix(rnorm(10000), nrow=100) #100 x 100 matrix: N=p
dim(Ynew)
gp <- gl(2,50)
gp
lm(Ynew~gp)
summary(manova(lm(Ynew~gp)))  #parametric algebra cannot be completed
anova(lm.rrpp(Ynew~gp,print.progress = FALSE))  #NO problem with RRPP!
##When parametric methods break down
Ynew <- matrix(rnorm(100000), nrow=100) #100 x 100 matrix: N=p
dim(Ynew)
anova(lm.rrpp(Ynew~gp,print.progress = FALSE))  #NO problem with RRPP!
#__________________________________________________________________________#
#Factorial MANOVA
model2<-lm(bumpus.data~sex*surv)
summary(manova(model2))
#Factorial MANOVA via RRPP
model2.rrpp <- lm.rrpp(Y~sex*surv,data = mydat, print.progress = FALSE)
anova(model2.rrpp)
groups <- interaction(mydat$sex, mydat$surv)
plot(model2.rrpp, type = "PC", pch=21, bg = groups)
legend("topright", levels(groups), pch = 21, pt.bg = 1:4)
#Also in vegan (FRPP only)
adonis(formula = Y~sex*surv, method = "euclidean" )
anova(model2.rrpp)
#Pairwise comparisons
PW <- pairwise(model2.rrpp,groups = SexBySurv, print.progress = FALSE)
summary(PW,test.type = "dist")  #No pairwise groups significant AFTER accounting for main effects!
coef(model2.rrpp)
model.matrix(~sex*surv)
model.matrix(~sex*surv)%*%coef(model2.rrpp)
summary(pairwise(model2.rrpp, model.null, groups = SexBySurv,
print.progress = FALSE),test.type = "dist")
summary(PW,test.type = "dist")  #No pairwise groups significant AFTER accounting for main effects!
#__________________________________________________________________________#
### Multivariate Regression
summary(manova(lm(Y~TotalLength)))
model.reg <- lm.rrpp(Y~TotalLength, data = mydat, print.progress = FALSE)
anova(model.reg)
plot(TotalLength,Y[,1])
plot(TotalLength,Y[,2])
plot(TotalLength,Y[,3])
plot(TotalLength,Y[,4])
### Visualizing multivariate regression
plot(model.reg, type = "regression", reg.type = "RegScore",
predictor = mydat$TotalLength, pch=19)
coef(model.reg)
#__________________________________________________________________________#
#MANCOVA
summary(manova(lm(Y~TotalLength*sex*surv)))
summary(manova(lm(Y~TotalLength+sex*surv))) # FIT COMMON SLOPE
#MANCOVA via RRPP
model.mancova <- lm.rrpp(Y~TotalLength*sex*surv, data =mydat, print.progress = FALSE)
anova(model.mancova)
#MANCOVA via RRPP
model.mancova <- lm.rrpp(Y~TotalLength+sex*surv, data =mydat, print.progress = FALSE)
anova(model.mancova)
#MANCOVA via RRPP
model.mancova <- lm.rrpp(Y~TotalLength*sex*surv, data =mydat, print.progress = FALSE)
anova(model.mancova)
#Pairwise comparisons of slopes: NOTE: Used here for illustrative purposes only!
# Interaction should show evidence justifying this analysis
PW.mancova <- pairwise(model.mancova, groups = SexBySurv, covariate = TotalLength, print.progress = FALSE)
summary(PW.mancova, test.type = "VC", angle.type = "deg")
### Visualizing MANCOVA
plot(model.mancova, type = "regression", reg.type = "RegScore",
predictor = mydat$TotalLength, pch=19, col = as.numeric(groups))
plot(model.mancova, type = "regression", reg.type = "PredLine",
predictor = mydat$TotalLength, pch=19,
col = as.numeric(groups))
#________________________________________________________________________#
# A more complex example
data(Pupfish)
Pupfish$Group <- interaction(Pupfish$Sex, Pupfish$Pop)
dim(coords)
dim(Pupfish$coords)
#MANOVA via RRPP
fit.m <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, print.progress = FALSE)
anova(fit.m)$table
summary(pairwise(fit.m,groups = Pupfish$Group),test.type = "dist")
#________________________________________________________________________#
#MANCOVA with Y as Distance matrix
mydat$Ydist <- dist(Y)
mancova.dist <- lm.rrpp (Ydist~TotalLength*sex*surv, data =mydat, print.progress = FALSE)
anova(mancova.dist)

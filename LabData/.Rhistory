dim(plethodon$land)
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)    #GPA-alignment
###  Traditional PCA
PCA <- gm.prcomp(Y.gpa$coords)
summary(PCA)
devtools::install_github('mlcollyer/RRPP', build_vignettes = TRUE)
devtools::install_github(“geomorphR/geomorph”, ref = “Stable”, build_vignettes = TRUE)
devtools::install_github("geomorphR/geomorph", ref = "Stable", build_vignettes = TRUE)
library(RRPP)
llm.rrpp
lm.rrpp
library(mcmcglmm)
install.packages("MCMCglmm")
library(MCMCglmm)
??`MCMCglmm-package`
library(geomorph)
?gm.prcomp
library(RRPP)
nsims <- 100
iter <- 999
n <- 100
g1 <- 5
g2 <- 10
g3 <- 2
b1 <- 0.0
b2 <- 0.0
b3 <- 0.0
e <- rnorm(n)
x <- sample(rep(seq(1,g1),n/g1))
x2 <- c(rep(seq(0,(n/4-1)),  each = 2),rep(seq(0,(n/4-1)),  each = 2))
x3 <- rep(seq(0,(g3-1)), each = n/g3)
y <- (x * b1) + (x2 * b2) + (x3 * b3) + e
x <- factor(x); x2 <- factor(x2); x3 <- factor(x3)
df <- data.frame(x = x, x2 = x2, x3 = x3, y = y)
fit.param <- lm(y ~ x + x2/x3, data = df)
fit.RRPP <- lm.rrpp(y ~ x + x2/x3, data = df, print.progress = FALSE, SS.type = "III")
anova(fit.RRPP, error = c("Residuals",
"x2:x3", "Residuals"))
749000+643000
library(ade4)
?randtest
randtest
install.packages ("ade4")
library(ade4)
?permtest
?randtest
data(meaudret)
envpca <- dudi.pca(meaudret$env, scannf = FALSE, nf = 3)
xvpca <- loocv(envpca)
xvpca
11/56
library(geomorph)
?define.sliders
# A true example is not possible, as digitizing experiences are unqiue, but here is a general set-up
myShapes <- readShapes("myDigitizingFile") # data from readShapes from StereoMorph
library(geomorhp)
library(geomorph)
# A true example is not possible, as digitizing experiences are unqiue, but here is a general set-up
myShapes <- readShapes("myDigitizingFile") # data from readShapes from StereoMorph
library(StereoMorph)
# A true example is not possible, as digitizing experiences are unqiue, but here is a general set-up
myShapes <- readShapes("myDigitizingFile") # data from readShapes from StereoMorph
devtools::install_github('mlcollyer/RRPP')
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
install.packages("rlang")
install.packages("xfun")
tinytex::tlmgr_update()
tinytex::tlmgr_update()
tinytex::reinstall_tinytex()
geomorph:::pairwise
?RRPP:::pairwise
28*33
802000+689000
369/11
34/12
library(geomorph)
?compare.evol.rates
data(plethspecies)
Y.gpa<-gpagen(plethspecies$land)    #GPA-alignment
gp.end<-factor(c(0,0,1,0,0,1,1,0,0))  #endangered species vs. rest
names(gp.end)<-plethspecies$phy$tip
ER<-compare.evol.rates(A=Y.gpa$coords, phy=plethspecies$phy,method="simulation",gp=gp.end,iter=999)
ER<-compare.evol.rates(A=Y.gpa$coords, phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
summary(ER)
ER1<-compare.evol.rates(A=Y.gpa$Csize, phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
ER1<-compare.evol.rates(A=matrix(Y.gpa$Csize), phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
ER1<-compare.evol.rates(A=as.matrix(Y.gpa$Csize), phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
size <-as.matrix(Y.gpa$Csize)
size
ER1<-compare.evol.rates(A=size, phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
ER1<-compare.evol.rates(A=size, phy=plethspecies$phy,method="simulation",gp=gp.end,iter=999)
summary(ER)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages('ps')
install.packages("ps")
install.packages("processx")
install.packages("jsonlite")
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
devtools::install_github('geomorphR/geomorph', ref="Develop")
devtools::install_github('geomorphR/geomorph', ref="Stable")
devtools::install_github()
devtools::install_github("geomorphR/geomorph", ref="Develop")
library(geomorph)
data(plethspecies)
Y.gpa<-gpagen(plethspecies$land)    #GPA-alignment
gp.end<-factor(c(0,0,1,0,0,1,1,0,0))  #endangered species vs. rest
names(gp.end)<-plethspecies$phy$tip
compare.evol.rates(A=Y.gpa$Csize, phy=plethspecies$phy,method="simulation",gp=gp.end,iter=999)
compare.evol.rates(A=Y.gpa$Csize, phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
808500+695500
?geomorph:::morphol.disparity
?geomorph::compare.evol.rates
devtools::install_github()
devtools::install_github('mlcollyer/RRPP', build_vignettes = TRUE)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
library(geomorph)
?compare.CR
data(pupfish)
Y.gpa<-gpagen(pupfish$coords, print.progress = FALSE)    #GPA-alignment
## landmarks on the body and operculum
land.gps<-rep('a',56); land.gps[39:48]<-'b'
group <- factor(paste(pupfish$Pop, pupfish$Sex, sep = "."))
levels(group)
coords.gp <- coords.subset(Y.gpa$coords, group)
modul.tests <- Map(function(x) modularity.test(x, land.gps,iter=499, print.progress = FALSE),
coords.gp)
modul.tests$Marsh.F
modul.tests$Marsh.M
modul.tests$Sinkhole.F
modul.tests$Sinkhole.M
group.Z <- compare.CR(modularity.tests, CR.null = FALSE)
group.Z <- compare.CR(modul.tests, CR.null = FALSE)
group.Z  #NOTE: need a summary function
land.gps3 <- rep('a',56); land.gps3[39:48]<-'b'; land.gps3[c(6:9,28:38)] <- 'c'
#3 module hypothesis (tail now a module)
land.gps4 <- rep('a',56); land.gps4[39:48]<-'b'; land.gps4[c(6:9,28:38)] <- 'c';
land.gps4[c(10,49:56)] <- 'd'  #4 module hypothesis (eye now a module)
m3.test <- modularity.test(coords.gp$Marsh.F,land.gps3, iter = 499, print.progress = FALSE)
m4.test <- modularity.test(coords.gp$Marsh.F,land.gps4, iter = 499, print.progress = FALSE)
model.Z <- compare.CR(modul.tests$Marsh.F,m3.test,m4.test, CR.null = TRUE)
model.Z
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages(c("alphashape3d", "aweek", "backports", "broom", "clusterGeneration", "cowplot", "data.table", "DescTools", "distill", "emmeans", "FactoMineR", "fitdistrplus", "foreign", "fpc", "future", "future.apply", "GGally", "ggplot2", "ggrepel", "gitcreds", "heatmap3", "here", "hunspell", "inline", "isoband", "janitor", "koRpus", "lme4", "loo", "mvabund", "nlme", "parallelly", "pbkrtest", "pkgbuild", "prismatic", "questionr", "RcppEigen", "rgdal", "rmarkdown", "robustbase", "segmented", "seqinr", "servr", "sf", "spam", "spatstat.data", "StanHeaders", "surface", "testthat", "tinytex", "usethis", "vctrs"))
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
devtools::install_github('mlcollyer/RRPP', ref="develop")
library(geomorph)
?morphol.disparity
data(plethodon)
Y.gpa<-gpagen(plethodon$land, print.progress = FALSE)    #GPA-alignment
gdf <- geomorph.data.frame(Y.gpa, species = plethodon$species,
site = plethodon$site)
# Morphological disparity for entire data set
morphol.disparity(coords ~ 1, groups = NULL, data = gdf,
iter = 999, print.progress = FALSE)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages(c("castor", "corHMM", "diffobj", "DT", "ggridges", "gmp", "MCMCglmm", "paletteer", "rticles", "spatstat.utils"))
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages('devtools', force=TRUE)
devtools::install_github("yihui/tinytex")
tinytex::pdflatex('test.tex')
tlmgr install texi2dvi
tlmgr_install texi2dvi
tinytex::tlmgr_install texi2dvi
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::reinstall_tinytex()
tinytex::parse_install()
tinytex::parse_install(text = Error in running tools::texi2pdf()
)
tinytex::parse_install(text = Error in running tools::texi2pdf() )
tinytex::tlmgr_install('tex2dvi')
tinytex:::install_yihui_pkgs()
tinytex::tlmgr_install('latexdiff')
tinytex::tlmgr_install('latexrevis')
tinytex::tlmgr_install('latexrevise')
tinytex::tlmgr_install('latexdiff-vc')
install.packages("rtools")
Sys.which("make")
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
BiocManager::install()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
install.packages('LOST')
BiocManager::install("pcaMethods")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
BiocManager::install("pcaMethods")
remotes::install_github('rstudio/rmarkdown')
60/8
install.packages('RRPP')
devtools::install_github('geomorphR/geomorph', ref="Develop", build_vignettes = TRUE)
install.packages('geomorph')
110000/9
(110000/9)*6.5
(110000/9)*6.5*1.54
(110000/9)*6.5*1.273
(110000/9)*6.5*1.273*1.54
10320/.273
10320*.273
10320/1.273
devtools::install_github('mlcollyer/RRPP', build_vignettes = TRUE)
install.package("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github('mlcollyer/RRPP', build_vignettes = TRUE)
geomorph:::pgpa
geomorph:::pGpa
mn <- c(0,0,1,0,1,1)
err <- matrix(rnorm(6000),ncol=6)
dat <- err+mn
library(geomorph)
mydat <- arrayspecs(dat,p=3,k=2)
fit <- gpagen(mydat)
plotAllSpecimens(fit$coords)
dat
dim(dat)
dim(mydat)
mn <- c(0,0,1,0,1,1,0,1)
err <- matrix(rnorm(8000,sd=.1),ncol=8)
dat <- err+mn
mydat <- arrayspecs(dat,p=4,k=2)
fit <- gpagen(mydat)
plotAllSpecimens(fit$coords)
mydat[,,1]
plot(phytools::pbtree(n=100))
tree <- phytools::pbtree(n=100)
tree$edge.length
ape::vcv.phylo(tree)
tree <- phytools::pbtree(n=100, scale = 1)
library(geomorph)
?bilat.symmetry
?geomorph::plotRefToTarget
library(geomorph)
# Two dimensional data
data(plethodon)
Y.gpa<-gpagen(plethodon$land)    #GPA-alignment
ref<-mshape(Y.gpa$coords)
plotRefToTarget(ref,Y.gpa$coords[,,39])
plotRefToTarget(ref,Y.gpa$coords[,,39], mag=2, outline=plethodon$outline)
#magnify by 2X
plotRefToTarget(ref,Y.gpa$coords[,,39], method="vector", mag=3)
plotRefToTarget(ref,Y.gpa$coords[,,39], method="points",
outline=plethodon$outline)
plotRefToTarget(ref,Y.gpa$coords[,,39], method="vector",
outline=plethodon$outline, mag=2.5)
plotRefToTarget(ref,Y.gpa$coords[,,39],
gridPars=gridPar(pt.bg = "green", pt.size = 1),
method="vector",mag=3)
mvrnorm
MASS::mvrnorm
library(geomorph)
?bilat.symmetry
data(lizards)
gdf <- geomorph.data.frame(shape = lizards$coords,
ind = lizards$ind,
replicate = lizards$rep)
liz.sym <- bilat.symmetry(A = shape, ind = ind, rep = rep,
object.sym = TRUE,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE)
summary(liz.sym)
FA <- liz.sym$FA.component
plotAllSpecimens(FA)
PCA <- gm.prcomp(FA)
?gm.prcomp
plot(PCA)
scores <- PCA$x[,1]
hist(scores)
lizards$ind
2975+2380
1894*2
9149-(1894*2)
5361/9
5361-2975
memory.limit()
memory.limit(size=25000)
year <- seq(2000,2020)
year
students <- c(26845, 27823, 27898, 27380, 26380,
25741, 25462, 26160, 26856, 27975, 28682, 29887,
31040, 33241, 34732, 36001, 36660, 36321, 34992,33391,  31825)
plot(year, students)
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
# Some basics in R
3->a  #Assign value to variable
a
b <- c(3,4,5)
b
b[2]
rnorm(50)
rnorm(100)
?rnorm
hist(rnorm(100))
hist(rnorm(1000))
hist(rnorm(10000))
hist(rnorm(10000,mean = 5))
hist(rnorm(10000,mean = 5,sd=.01))
hist(rnorm(10000,mean = 5),xlim = c(0,10))
hist(rnorm(10000,mean = 5,sd=0.01),xlim = c(0,10))
hist(rnorm(10000,mean = 5,sd=0.1),xlim = c(0,10))
hist(rnorm(10000,mean = 5,sd=0.5),xlim = c(0,10))
hist(rnorm(10000,mean = 5,sd=1.5),xlim = c(0,10))
x <- rnorm(1000)
hist(x)
a <- rnorm(50) #generate random normal vector
b <- rnorm(a)
plot(a, b)      # a simple plot
c<-cbind(a,b)    #binds columns together (rbind does same by rows)
c
dim(c)
class(c)
c[1]   #first element
c[1,]	 #first row
c[,1]  #first column
rbind(a,b)
ls() # See which R objects are now in the R workspace.
### Some base functions
sum(a)
a
### Some base functions
sum(a)
mean(a)
sum(a)/ length(a)
min(a)
max(a)
range(a)
var(a)
a^2		#square values
a^3
a^.5
sqrt(a)	#NaN for negative values
abs(a)
cor(a,b)
?cor   #call man page for information
ls()
rm(list=ls())   #remove items in memory
a
# Matrix operations
a<-matrix(c(1,0,4,2,-1,1),nrow=3)
b<-matrix(c(1,-1,2,1,1,0),nrow=2)
a
b
c<-t(a)	#matrix transpose
a
c
2*a	#scalar multiplication
b
c
b+c
b-c
a+b		##NOTE: non-conformable matrices (check rxc of your matrices!)
a
b
#elementwise multiplication (hadamard product)
c
b
c*b
a
b
# matrix multiplication
a%*%b		## %*% is symbol for matrix multiplication
b%*%a		## matrix order matters
rm(list=ls())
gl(2,10)	#Generate levels of a factor
?read.csv
## Read data
mydata<-read.csv(file="Data/Lab-01-RIntroData.csv",header=T)
View(mydata)
?cd
?swd
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
?setwd
setwd("C:/DeanData/Teaching/EEOB590_AdvBiostat/BioStats/LabData")
mydata
Y<-as.matrix(mydata[,(2:3)])
Y
mydata[,4]
FactorA<-as.factor(mydata[,4])
Y
FactorA
Y
?apply
?sd
# The 'apply' functions (apply, sapply, tapply, etc.) loop over data and do things
apply(Y,2,sd)    #here, we obtain the std for each column of a matrix
apply(Y,1,sd)
apply(Y,2,sum)
apply(Y,2,mean)
FactorA
tapply(Y[,1],FactorA,mean)	#Obtain means for first column for levels of FactorA
tapply(Y[,2],FactorA,mean)	#Obtain means for first column for levels of FactorA
tapply(Y,FactorA,mean)		#Try entire matrix: doesn't work
dim(Y)
rowsum(Y, FactorA)
table(FactorA)
as.vector(table(FactorA))
rowsum(Y, FactorA)/as.vector(table(FactorA))    #This obtains means.  Could also use a loop.
mymean<-function(x){
n<-length(x)
tmp<-0
for (i in 1:n){
tmp<-tmp+x[i]
}
mn<-tmp/n
return(mn)
}
x<-rnorm(10)
mean(x)
mymean(x)  #works!
Y<-rnorm(10)
mean(Y)
mymean(Y)  #works!
mydata
#Some basic statistics
model1<-lm(mydata$y~mydata$x)  #run regression
model1
summary(model1)
anova(model1)  #generates anova table of results
#A plot with regression line
plot(mydata$x,mydata$y)
abline(coef(model1))
mydata$groups
model2<-lm(mydata$y~mydata$groups)  #run anova
summary(model2)
anova(model2)
class(mydata)
mydata$x
mydata$y
##### Attaching Data
attach(mydata)  #link data table to call columns by name
x
y
groups
anova(lm(y~groups))     #ANOVA
anova(lm(y~x))		#regression
anova(lm(y~x*groups))   #ANCOVA
rm(x)
##### Attaching Data
attach(mydata)  #link data table to call columns by name
anova(lm(y~groups))     #ANOVA
anova(lm(y~x))		#regression
anova(lm(y~x*groups))   #ANCOVA
###MULTIVARIATE
ymatrix<-cbind(y,y2)  #generate multivariate Y-matrix
ymatrix
summary(manova(lm(ymatrix~x*groups))) ####NOTE: notation differs slightly
ymatrix
rm(list=ls())
?save
?aov
?anova
?car:::Anova
#Enrollment Trends: 2000-2020
year <- seq(2000,2020)
ISU <- c(26845, 27823, 27898, 27380, 26380,
25741, 25462, 26160, 26856, 27975, 28682, 29887,
31040, 33241, 34732, 36001, 36660, 36321, 34992,33391,  31825)
UConn <- c(12819, 13588, 14213, 15260, 15709, 16006, 16036,
16459, 16691, 16970, 17450, 17170, 17684, 18016,
18451, 19030, 18930, 18830, 18585, 18658)
plot(year,ISU, pch=19, col='black', ylim = c(0,40000))
plot(year,ISU, pch=19, col='black', ylim = c(0,40000),l=T)
points(year,UConn,pck=19,col="blue")
length(UConn)
length(year)
UConn <- c(11,987,12819, 13588, 14213, 15260, 15709, 16006, 16036,
16459, 16691, 16970, 17450, 17170, 17684, 18016,
18451, 19030, 18930, 18830, 18585, 18658)
plot(year,ISU, pch=19, col='black', ylim = c(0,40000))
points(year,UConn,pck=19,col="blue")
length(year)
length(UConn)
UConn <- c(11987,12819, 13588, 14213, 15260, 15709, 16006, 16036,
16459, 16691, 16970, 17450, 17170, 17684, 18016,
18451, 19030, 18930, 18830, 18585, 18658)
points(year,UConn,pck=19,col="blue")
points(year,UConn,pch=19,col="blue")
plot(year,ISU, pch=19, col='black', ylim = c(0,40000), ylab = "Enrollment")
points(year,UConn,pch=19,col="blue")
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = 1:2)
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = 1:4)
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = 1:4)
plot(year,ISU, pch=19, col='black', ylim = c(0,40000), ylab = "Enrollment")
points(year,UConn,pch=19,col="blue")
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = 1:4)
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = c("black","blue"))
plot(year,ISU, pch=19, col='black', ylim = c(0,40000), ylab = "Undergrad Enrollment")
points(year,UConn,pch=19,col="blue")
ISU <- c(22481, 23460, 23399, 22230, 21354, 20732, 20440, 21004,
21607, 22521, 23104, 24343, 25553, 27659, 28893, 30034,
30671, 30406, 29621, 28294, 26846)
plot(year,ISU, pch=19, col='black', ylim = c(0,40000), ylab = "Undergrad Enrollment")
points(year,UConn,pch=19,col="blue")
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = c("black","blue"))
plot(year,ISU, pch=19, col='black', ylim = c(0,35000), ylab = "Undergrad Enrollment")
points(year,UConn,pch=19,col="blue")
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = c("black","blue"))
plot(year,ISU, pch=19, col='black', ylim = c(0,35000), ylab = "Undergrad Enrollment")
points(year,UConn,pch=19,col="blue")
legend("bottomright",c("ISU", "UConn"), lty = 1, lwd = 2, col = c("black","blue"))
